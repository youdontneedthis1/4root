---
- name: WebServer Deployments
  #Provide Scope here - avoid use of 'all'.
  hosts: ansibleclient
  remote_user: ansibleclient
  #Allow for escalation through-out playbook. If needed this could be trimmed back
  #To only required operations.
  become: true

  tasks:
    #Runs apt-get install upgrade to catch any packages needing update
    - name: Perform Updates
      apt:
       upgrade: yes
       update_cache: yes
    
    #Recommended Pre-Reqs
    #https://docs.docker.com/engine/install/ubuntu/
    - name: Install Pre-reqs
      apt:
       name:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg-agent
        - software-properties-common
        - python3
       state: latest

    #We are using Ubuntu repackage of Docker because of installation requirements
    #Docker.io is the Ubuntu package
    - name: Install Docker
      apt:
       name:
        - docker.io
        - docker-compose

    - name: Make sure Docker Starts
      service:
        name: docker
        state: started

    - name: Cleanup environment     
      file:
        path: /Project/
        state: directory

    - name: Create Docker files/environment
      git:
        repo: 'https://github.com/youdontneedthis1/4root.git'
        dest: /Project

    #Docker update is here because we used a compose file but want the option
    #to deploy into swarm. Unless deployed in swarm compose file config
    #doesn't apply. See - https://docs.docker.com/compose/compose-file/#deploy
    - name: Launch Docker
      command: "{{ item }}"
      with_items:
        - sudo docker-compose -f /Project/Docker/docker-compose.yml -p RootDevs up
        - sudo docker update --restart unless-stopped ruby_web

    #Temp git repo contains the Ansible Playbook - once deployed, this should be
    #deleted and cleaned up. This is a dirty method of minimizing resources.
    - name: Cleanup environment     
      file:
        path: ./Project/playbook.yml
        state: absent
